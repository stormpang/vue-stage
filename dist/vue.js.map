{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["export function isFunction(val) {\n  return typeof val === 'function'\n}\n\nexport function isObject(val) {\n  return typeof val === 'object' && val !== null\n}\n\nexport let isArray = Array.isArray\n","let oldArrayPrototype = Array.prototype // 获取数组的老的原型方法\n\nexport let arrayMethods = Object.create(oldArrayPrototype) // 让arrayMethods通过__proto__能获取到数组的方法\n// arrayMethods.__proto__ = oldArrayPrototype\n// arrayMethods.push = function\n\nlet methods = [ // 只有这7个方法 可以导致数组发生变化\n  'push',\n  'shift',\n  'pop',\n  'unshift',\n  'reverse',\n  'sort',\n  'splice'\n]\n\nmethods.forEach(method => {\n  arrayMethods[method] = function (...args) {\n    // 数组新增的属性要看一下是不是对象 如果是对象 继续进行劫持\n    // 需要调用数组原生逻辑\n    oldArrayPrototype[method].call(this, ...args)\n    // todo... 可以添加自己逻辑 函数劫持 切片\n    let inserted = null\n    const ob = this.__ob__\n    switch (method) {\n      case 'splice': // 修改 删除 添加\n        inserted = args.slice(2) // splice从第三个参数起 是增添的新数据\n      case 'push':\n      case 'unshift':\n        inserted = args // 调用push和unshift 传递的参数就是新增的逻辑\n        break\n    }\n    // inserted 遍历数组 看一下它是否需要进行劫持\n    if (inserted) {\n      ob.observeArray(inserted)\n    }\n  }\n})\n\n// 属性的查找：是先找自己身上的，找不到去原型上查找\n","import {isArray, isObject} from \"../utils\";\nimport {arrayMethods} from \"./array\";\n\n// 1.每个对象都有一个__proto__属性 它指向所属类的原型 fn.__proto__ = Function.prototype\n// 2.每个原型上都有一个constructor属性 指向函数本身 Function.prototype.constructor = Function\nclass Observer {\n  constructor(value) {\n    // 不让__ob__被遍历到\n    // value.__ob__ = this // 我给对象和数组添加一个自定义属性\n    Object.defineProperty(value, '__ob__', {\n      value: this,\n      enumerable: false // 表示这个属性不能被列举出来 不能被循环到\n    })\n    if (isArray(value)) {\n      // 更改数组原型方法，如果是数组 我就改写数组的原型链\n      value.__proto__ = arrayMethods\n\n      this.observeArray(value)\n    } else {\n      this.walk(value) // 核心就是循环对象\n    }\n  }\n\n  observeArray(data) { // 递归遍历数组，对数组内部的对象再次进行重写\n    data.forEach(item => {\n      observe(item) // 数组里面如果是引用类型 那么是响应式的\n    })\n  }\n\n  walk(data) {\n    Object.keys(data).forEach(key => { // 要使用defineProperty重新定义\n      defineReactive(data, key, data[key])\n    })\n  }\n}\n\n// vue2应用了defineProperty需要一加载的时候 就进行递归操作 所以耗性能 如果层次过深也会浪费性能\n// 1.性能优化的原则:\n// 1）不要把所有的数据都放到data中 因为所有的数据都会增加get和set\n// 2）不要写数据的时候 层次过深 尽量扁平化数据\n// 3）不要频繁获取数据\n// 4）如果数据不需要响应式 可以使用Object.freeze 冻结属性\nfunction defineReactive(obj, key, value) { // vue2慢的原因 主要在这个方法中\n  observe(value) // 递归进行观测数据 不管有多少层 我都进行defineProperty\n  Object.defineProperty(obj, key, {\n    get() { // 后续会有很多逻辑\n      return value; // 闭包，次此value 会像上层的value进行查找\n    },\n    set(newValue) {  // 如果设置的是一个对象那么会再次进行劫持\n      if (newValue === value) return\n      observe(newValue)\n      console.log('修改')\n      value = newValue\n    }\n  })\n}\n\nexport function observe(value) {\n  // 1.如果value不是对象 那么就不用观测了 说明写的有问题\n  if (!isObject(value)) {\n    return\n  }\n\n  if (value.__ob__) {\n    return // 一个对象不需要重新被观测\n  }\n\n  // 需要对对象进行观测（最外层必须是一个{} 不能是数组）\n  // 如果一个数据已经被观测过了 就不要在进行观测了 用类来实现 我管测过就增加一个标识 说明观测过了 在观测的时候可以先检测是否观测过 如果观测过了就跳过\n  return new Observer(value)\n}\n","import {isFunction} from \"./utils\";\nimport {observe} from \"./observe\";\n\nexport function initState(vm) {\n  const opts = vm.$options\n\n  if (opts.data) {\n    initData(vm)\n  }\n}\n\nfunction proxy(vm, key, source) { // 取值的时候做代理 不是暴力的把_data属性赋予给vm 而且直接赋值会有命名冲突问题\n  Object.defineProperty(vm, key, {\n    get() {\n      return vm[source][key]\n    },\n    set(newValue) {\n      vm[source][key] = newValue\n    }\n  })\n}\n\nfunction initData(vm) {\n  let data = vm.$options.data // 用户传入的数据\n\n  // 如果用户传递的是一个函数 则取函数的返回值作为对象 如果就是对象那就直接使用这个对象\n  // 只有根实例可以是一个对象\n  data = vm._data = isFunction(data) ? data.call(vm) : data\n\n  // 需要将data变成响应式的 Object.defineProperty 重写data中的所有属性\n  observe(data) // 观测数据\n\n  for (let key in data) { // vm.message => vm._data.message\n    proxy(vm, key, '_data')\n  }\n}\n","import {initState} from \"./state\";\n\nexport function initMixin(Vue) {\n  // 后续组件化开发的时候 Vue.extend 可以创造一个子组件 子组件可以继承Vue 子组件也可以调用_init方法\n  Vue.prototype._init = function (options) {\n    const vm = this\n\n    // 把用户的选项放到vue上，这样在其他地方中都可以获取到options了\n    vm.$options = options // 为了后续扩展的方法都可以获取$options选项\n\n    // options中用户传入的数据 el data\n    initState(vm)\n\n    if (vm.$options.el) {\n      // 要将数据挂再到页面上\n      console.log('页面要挂载')\n    }\n  }\n}\n","import {initMixin} from './init'\n\n// vue要如何实现 原型模式 所有的功能都通过原型扩展的方式来添加\nfunction Vue(options) {\n  this._init(options) // 实现vue的初始化功能\n}\n\ninitMixin(Vue)\n\n// 导出Vue给别人使用\nexport default Vue\n\n// 1.new Vue 会调用_init方法进行初始化操作\n// 2.会将用户的选项放到 vm._options 上\n// 3.会对当前属性上搜索有没有data数据 initState\n// 4.有data判断data是不是一个函数 如果是函数取返回值 initData\n// 5.observe去观测data中的数据 和vm没关系 说明data已经变成了响应式\n// 6.vm上想取值也能渠道data中的数据 vm._data = data 这样用户能取到data了 vm._data\n// 7.用户觉得有点麻烦 vm.xxx => vm._data\n// 8.如果更新对象不存在的属性 会导致视图不更新 如果是数组更新索引和长度不会触发更新\n// 9.如果是替换成一个新对象 新对象会被进行劫持 如果数组存放新内容push unshift 新增的内容也会被劫持 通过__ob__进行表示这个对象被监控过（在vue中被监控的对象都有一个__ob__这个属性）\n\n\n"],"names":["isFunction","val","isObject","isArray","Array","oldArrayPrototype","prototype","arrayMethods","Object","create","methods","forEach","method","args","call","inserted","ob","__ob__","slice","observeArray","Observer","constructor","value","defineProperty","enumerable","__proto__","walk","data","item","observe","keys","key","defineReactive","obj","get","set","newValue","console","log","initState","vm","opts","$options","initData","proxy","source","_data","initMixin","Vue","_init","options","el"],"mappings":"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"}